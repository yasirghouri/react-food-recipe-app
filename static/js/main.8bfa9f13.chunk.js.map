{"version":3,"sources":["components/RecipeDetails/RecipeDetails.js","components/Recipe/Recipe.js","components/Alert/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","idx","className","text","weight","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","process","getData","a","axios","get","result","data","more","console","log","hits","onSubmit","e","preventDefault","type","placeholder","autoComplete","value","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAgBeA,G,YAbO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAACC,EAAYC,GAClC,OACE,qBAAcC,UAAU,iCAAxB,UACE,oBAAIA,UAAU,iCAAd,SAAgDF,EAAWG,OAC3D,qBAAID,UAAU,mCAAd,sBACYF,EAAWI,YAHhBH,QCcAI,G,MAhBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEcH,EAAOA,OAA1CI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKd,EAFE,EAEFA,YAC3B,OACE,sBAAKI,UAAU,SAAf,UACE,6BAAKQ,IACL,qBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,mBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,yBAGA,wBAAQC,QAAS,kBAAMT,GAASD,IAAhC,yBACCA,GAAQ,cAAC,EAAD,CAAeV,YAAaA,SCJ5BqB,G,MARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKlB,UAAU,QAAf,SACE,6BAAKkB,QCoDIC,MApDf,WAAgB,IAAD,EACad,mBAAS,IADtB,mBACNe,EADM,KACCC,EADD,OAEiBhB,mBAAS,IAF1B,mBAENiB,EAFM,KAEGC,EAFH,OAGalB,mBAAS,IAHtB,mBAGNa,EAHM,KAGCM,EAHD,KAIPd,EAAG,0CAAsCU,EAAtC,mBAAsDK,WAAtD,oBAA8FA,oCACjGC,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVP,EADU,gCAESQ,IAAMC,IAAInB,GAFnB,QAENoB,EAFM,QAGAC,KAAKC,MAKfC,QAAQC,IAAIJ,GACZP,EAAWO,EAAOC,KAAKI,MACvBX,EAAS,IACTH,EAAS,MAPTA,EAAS,IACTG,EAAS,0BACTD,EAAW,KAND,sBAcZC,EAAS,0BAdG,2CAAH,qDAuBb,OACE,sBAAKxB,UAAU,MAAf,UACE,iDACA,uBAAMA,UAAU,mBAAmBoC,SARb,SAACC,GACzBA,EAAEC,iBACFZ,KAME,UACGR,GAAS,cAAC,EAAD,CAAOA,MAAOA,IACxB,uBACEqB,KAAK,OACLC,YAAY,cACZC,aAAa,MACbC,MAAOtB,EACPuB,SAAU,SAACN,GAAD,OAAOhB,EAASgB,EAAEvB,OAAO4B,UAErC,uBAAOH,KAAK,SAASG,MAAM,cAE7B,qBAAK1C,UAAU,eAAf,SACGsB,GACCA,EAAQzB,KAAI,SAACO,EAAQL,GACnB,OAAO,cAAC,EAAD,CAAkBK,OAAQA,GAAbL,YCvCjB6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8bfa9f13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./RecipeDetails.css\";\r\n\r\nconst RecipeDetails = ({ ingredients }) => {\r\n  return ingredients.map((ingredient, idx) => {\r\n    return (\r\n      <ul key={idx} className=\"recipeDetails__ingredient-list\">\r\n        <li className=\"recipeDetails__ingredient-text\">{ingredient.text}</li>\r\n        <li className=\"recipeDetails__ingredient-weight\">\r\n          Weight - {ingredient.weight}\r\n        </li>\r\n      </ul>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState } from \"react\";\r\nimport RecipeDetails from \"../RecipeDetails/RecipeDetails\";\r\nimport \"./Recipe.css\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { label, image, url, ingredients } = recipe.recipe;\r\n  return (\r\n    <div className=\"recipe\">\r\n      <h2>{label}</h2>\r\n      <img src={image} alt={label} />\r\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        More Info..\r\n      </a>\r\n      <button onClick={() => setShow(!show)}>ingredients</button>\r\n      {show && <RecipeDetails ingredients={ingredients} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <h3>{alert}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Recipe from \"./components/Recipe/Recipe\";\nimport Alert from \"./components/Alert/Alert\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_APP_ID}&app_key=${process.env.REACT_APP_APP_KEY}`;\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await axios.get(url);\n      if (!result.data.more) {\n        setQuery(\"\");\n        setAlert(\"No Food With Such Name\");\n        setRecipes([]);\n      } else {\n        console.log(result);\n        setRecipes(result.data.hits);\n        setAlert(\"\");\n        setQuery(\"\");\n      }\n    } else {\n      setAlert(\"Please Enter Food Name\");\n    }\n  };\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Food Recipe App</h1>\n      <form className=\"app__search-form\" onSubmit={formSubmitHandler}>\n        {alert && <Alert alert={alert} />}\n        <input\n          type=\"text\"\n          placeholder=\"Search Food\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <input type=\"submit\" value=\"search\" />\n      </form>\n      <div className=\"app__recipes\">\n        {recipes &&\n          recipes.map((recipe, idx) => {\n            return <Recipe key={idx} recipe={recipe} />;\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}